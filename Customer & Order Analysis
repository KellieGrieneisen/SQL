##In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#How many orders were made in January?
SELECT COUNT(orderid) 
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID' ;

#How many orders were for an Iphone?
SELECT COUNT(orderid) 
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID' 
AND product = 'iPhone';

#Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum
FROM BIT_DB.customers c
INNER JOIN BIT_DB.FebSales fs 
ON c.order_id = fs.orderid
WHERE length(order_id) = 6
AND order_id <> 'Order ID';

#Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT product, price
FROM BIT_DB.JanSales
ORDER BY price
LIMIT 1;

#What is the total revenue for each product sold in January?
SELECT product, SUM(quantity)*price  as revenue
FROM BIT_DB.JanSales
GROUP BY product;

#Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, SUM(quantity) as quantity, SUM(quantity)*price  as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(distinct cust.acctnum), avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid = cust.order_id
WHERE Feb.Quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';

#Select order dates made between 2/13/19 and 2/18/19
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

#What is the location of the order made on 2/18/19 at 1:35?
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

#How many products were ordered on 2/18/19?
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

#What products are listed as Batteries?
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

#List all products with prices ending in .99 cents
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99';

#List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT distinct Product, SUM(quantity) as units_sold
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product; 

#Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT location, SUM(quantity) as quant
FROM BIT_DB.JanSales
WHERE location LIKE '%New York%'
GROUP BY location
HAVING quant >= 3;

#How many of each type of headphone were sold in February?
SELECT product, SUM(quantity) as quant_sold
FROM BIT_DB.FebSales
WHERE product LIKE '%headphone%'
GROUP BY product;

#What was the average amount spent per account in February?
SELECT AVG(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

#What was the average quantity of products purchased per account in February? 
SELECT AVG(quantity*product)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

#Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT product, SUM(quantity*price) as revenue
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY product
ORDER BY revenue desc Limit 1;
